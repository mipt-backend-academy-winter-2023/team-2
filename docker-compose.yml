version: "3.9"

services:
  auth:
    build: .
    ports:
      - "8082:8082"
    entrypoint: bash -c "source ~/.sdkman/bin/sdkman-init.sh && sbt 'runMain auth.AuthMain'"

  routing-balancer:
    image: nginx
    ports:
      - "8080:80"
    volumes:
      - "./src/main/resources/nginx.conf:/etc/nginx/nginx.conf"
  routing1:
    build: .
    ports:
      - "8091:8081"
    entrypoint: bash -c "source ~/.sdkman/bin/sdkman-init.sh && sbt 'runMain routing.RoutingMain'"
  routing2:
    build: .
    ports:
      - "8092:8081"
    entrypoint: bash -c "source ~/.sdkman/bin/sdkman-init.sh && sbt 'runMain routing.RoutingMain'"
  routing3:
    build: .
    ports:
      - "8093:8081"
    entrypoint: bash -c "source ~/.sdkman/bin/sdkman-init.sh && sbt 'runMain routing.RoutingMain'"

  images:
    build: .
    ports:
      - "8083:8083"
    entrypoint: bash -c "source ~/.sdkman/bin/sdkman-init.sh && sbt 'runMain images.ImagesMain'"

  database:
    image: "postgres"
    env_file:
      - docker-compose/database.env
    ports:
      - "5433:5432"
    volumes:
      - database-data:/var/lib/postgresql/data/
  routedatabase:
    build:
      context: .
      dockerfile: Dockerfile-db
    env_file:
      - docker-compose/routedatabase.env
    ports:
      - "5434:5432"
    volumes:
      - database-data:/var/lib/postgresql/routedata/
#  helper:
#    build: .
#    expose:
#      - "7777"
#    entrypoint: bash -c "source ~/.sdkman/bin/sdkman-init.sh && sbt 'runMain helper.HelperMain'"


volumes:
  database-data:
